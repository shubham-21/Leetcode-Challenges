class Solution {
    public int longestPalindromeSubseq(String s) {
        int[][] dp= new int[s.length()][s.length()];
        for (int i=0; i<dp.length;i++)
        {
            for (int j=0; j<dp[0].length;j++)
            {
                if (i==j)
                {
                    dp[i][j]=1;
                }
            }
        }
        
        int n= s.length();
        int l=1;
        while (l<n)
        {
            int i=0;
            while (i+l<n)
            {
                 int j=i+l;
                 if (s.charAt(i)==s.charAt(j))
                    {
                        dp[i][j]=2+ dp[i+1][j-1];
                    }
                    else{
                        dp[i][j]= Math.max(dp[i][j-1],dp[i+1][j]);
                    }
                i+=1;
            }
            l++;
        }
               
            
    //     for (int i=0; i<dp.length;i++)
    //     {
    //         for (int j=0; j<dp[0].length;j++)
    //         {
    //             System.out.print(dp[i][j]);
    //             System.out.print(" ");
    //         }
    //         System.out.println();
    // }
    return dp[0][dp[0].length-1];
    }
        
}
